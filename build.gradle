/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    // Apply the ANTLR plugin
    id 'antlr'

    // GraalVM native-image plugin
    id "org.mikeneck.graalvm-native-image" version "0.5.0"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {

    antlr "org.antlr:antlr:3.5.2" // use ANTLR version 3
    implementation group: 'com.github.rjeschke', name: 'txtmark', version: '0.13'
    // implementation group: 'net.sf.jopt-simple', name: 'jopt-simple', version: '4.5'
    compile 'info.picocli:picocli:4.3.0'
    annotationProcessor 'info.picocli:picocli-codegen:4.3.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application.
    mainClassName = 'glossa.Main'
}

compileJava {
    options.compilerArgs += ["-Aproject=glossa/glossa-interpreter"]
}

nativeImage {
    graalVmHome = System.getProperty('java.home')
    mainClass = "$mainClassName"
    executableName = "glossa-interpreter"
    arguments(
      '--static',
      '--enable-all-security-services',
      '--initialize-at-run-time=com.example.runtime',
      '--report-unsupported-elements-at-runtime',
      '-H:ResourceConfigurationFiles=native-image/resources.json',
      '-H:ReflectionConfigurationFiles=native-image/reflection-config.json'
  )

}
