# Glossa-Interpreter

An interpreter for the 'ΓΛΩΣΣΑ' programming language developed using [Antlr 3.2](http://www.antlr.org/) and [Java](http://www.java.com/en/).

## License

Copyright (c) Georgios Migdos

Source code is available under the terms of the [MIT license](http://www.opensource.org/licenses/mit-license.php).

[Antlr 3](https://www.antlr.org/) is copyright of Terence Parr and it is available under the terms of the [BSD license](http://www.antlr.org/license.html).

[PicoCli](https://picocli.info/) is copyright of Remko Popma and it is available under the terms of the [Apache 2.0 License](https://opensource.org/licenses/Apache-2.0).

[TxtMark](https://github.com/rjeschke/txtmark) is copyright of René Jeschke <rene_jeschke@yahoo.de> and it is available under the terms of the [Apache 2.0 License](https://opensource.org/licenses/Apache-2.0).

## Status

The interpreter can now execute all valid ΓΛΩΣΣΑ programs.

- Lexer/Parser: Errors/warnings in Greek ✔
- Static type analysis: Errors/warnings in Greek ✔
- Runtime errors/warnings in Greek ✔
- Lexer/Parser: Main program structure ✔
- Static type analysis: Main program structure ✔
- Statement execution: Main program structure ✔
- Built-in functions ✔
- Lexer/Parser: Functions ✔
- Static type analysis: Functions ✔
- Statement execution: Functions ✔
- Lexer/Parser: Procedures ✔
- Static type analysis: Procedures ✔
- Statement execution: Procedures ✔
- Command-line interface ✔
- Step-by-step execution ✔

(The GUI Swing components have been moved to a separate project.)

✔ = completed, ⟳ = in progress, ✘ = not implemented yet

## Build instructions

To build the project’s code you will need :

- JDK (8.x+).
You can install it on Ubuntu with:

    [sudo apt-get install openjdk-8-jdk](apt://openjdk-8-jdk)

On Linux, it is recommended to use a GraalVM installation instead and build a 
native application image instead of the JAR (see below).

- [Gradle](https://gradle.org/).

All dependencies, including Gradle itself, will be downloaded the first time you
build the code.

Open a terminal and give:
    ./gradlew clean build

The command above will result in redistributable ZIP and TAR archives in `build/distributions`.

In order to build a native application image (requires GraalVM JDK with native-image
tooling installed):

    ./gradlew clean build nativeImage

## How to run the interpreter (native-image builds)

To run the interpreter give:

    ./glossa-interpreter <input_file>

e.g.:

    ./glossa-interpreter src/glossa/samples/PrintTest.gls

For more information give:

    ./glossa-interpreter glossa.Main -h

## Samples

There are some example input files in:

    src/glossa/samples/

